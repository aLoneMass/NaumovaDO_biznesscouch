#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—Ä–µ–º–µ–Ω–∏ –∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
"""

import os
import schedule
import time
from datetime import datetime
from dotenv import load_dotenv
from backup_service import BackupService

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

def check_time():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –≤—Ä–µ–º–µ–Ω–∏"""
    now = datetime.now()
    print(f"üïê –¢–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è: {now.strftime('%d.%m.%Y %H:%M:%S')}")
    print(f"üìÖ –î–µ–Ω—å –Ω–µ–¥–µ–ª–∏: {now.strftime('%A')}")
    print(f"üåç –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {time.tzname[0] if time.daylight == 0 else time.tzname[1]}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±–ª–∏–∑–∫–æ –ª–∏ –≤—Ä–µ–º—è –∫ 21:00
    target_hour = 21
    current_hour = now.hour
    current_minute = now.minute
    
    if current_hour == target_hour:
        print(f"‚úÖ –°–µ–π—á–∞—Å –≤—Ä–µ–º—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è (21:00)!")
    elif current_hour == target_hour - 1 and current_minute >= 55:
        print(f"‚è∞ –î–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å {60 - current_minute} –º–∏–Ω—É—Ç")
    elif current_hour == target_hour + 1 and current_minute <= 5:
        print(f"‚è∞ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±—ã–ª–æ {current_minute} –º–∏–Ω—É—Ç –Ω–∞–∑–∞–¥")
    else:
        hours_until = (target_hour - current_hour) % 24
        print(f"‚è∞ –î–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Å—Ç–∞–ª–æ—Å—å –ø—Ä–∏–º–µ—Ä–Ω–æ {hours_until} —á–∞—Å–æ–≤")

def test_scheduler():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞"""
    print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    bot_token = os.getenv('BOT_TOKEN')
    backup_to = os.getenv('BACKUPTO')
    
    if not bot_token or not backup_to:
        print("‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è BOT_TOKEN –∏–ª–∏ BACKUPTO")
        return
    
    print(f"‚úÖ –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω—ã")
    print(f"ü§ñ –¢–æ–∫–µ–Ω –±–æ—Ç–∞: {bot_token[:10]}...")
    print(f"üì± ID –¥–ª—è —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π: {backup_to}")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
    backup_service = BackupService(bot_token, backup_to)
    
    # –ü–ª–∞–Ω–∏—Ä—É–µ–º –∑–∞–¥–∞—á—É –Ω–∞ 1 –º–∏–Ω—É—Ç—É –≤–ø–µ—Ä–µ–¥ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_time = datetime.now().replace(second=0, microsecond=0)
    test_time = test_time.replace(minute=test_time.minute + 1)
    
    print(f"‚è∞ –ü–ª–∞–Ω–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞ {test_time.strftime('%H:%M')}")
    
    # –ü–ª–∞–Ω–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤—É—é –∑–∞–¥–∞—á—É
    schedule.every().day.at(test_time.strftime("%H:%M")).do(backup_service.send_backup)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞ 2 –º–∏–Ω—É—Ç—ã
    print("üîÑ –ó–∞–ø—É—Å–∫–∞–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫ –Ω–∞ 2 –º–∏–Ω—É—Ç—ã...")
    start_time = time.time()
    
    while time.time() - start_time < 120:  # 2 –º–∏–Ω—É—Ç—ã
        schedule.run_pending()
        time.sleep(1)
    
    print("‚úÖ –¢–µ—Å—Ç –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º—è
    check_time()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
    test_scheduler()
    
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

if __name__ == '__main__':
    main() 